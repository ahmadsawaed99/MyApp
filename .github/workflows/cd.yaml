# This workflow will deploy to production

name: Deploy to Amazon EKS

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: Deployment

    env:
      AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
      NAMESPACE: ${{ secrets.NAMESPACE }}
      DEPLOYMENT: ${{ secrets.DEPLOYMENT }}
      IMAGE_TAG: ${{ github.sha }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: $AWS_ACCESS_KEY_ID
          aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
          aws-region: $AWS_REGION

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN

      - name: Build and push Docker image
        run: |
          IMAGE=$DOCKERHUB_USERNAME/$IMAGE_NAME
          TAG=$IMAGE_TAG
          docker build -t $IMAGE:$TAG -t $IMAGE:latest .
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest
          
      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER" --region "$AWS_REGION"

      - name: Ensure Docker Hub pull secret
        run: |
          kubectl create secret docker-registry dockerhub-cred \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username='DOCKERHUB_USERNAME' \
            --docker-password='$DOCKERHUB_TOKEN' \
            --namespace "$NAMESPACE" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Set image on Deployment
        run: |
          kubectl -n "$NAMESPACE" set image deployment/"$DEPLOYMENT" \
            web="$IMAGE_REPO:$IMAGE_TAG"

      - name: Wait for rollout
        run: kubectl -n "$NAMESPACE" rollout status deployment/"$DEPLOYMENT" --timeout=5m
